AWSTemplateFormatVersion: "2010-09-09"
Description: "This template is for 'AWS Hands-on for Beginners Amazon EC2 Auto Scaling'."
Resources: 
  VPC: 
    Type: "AWS::EC2::VPC"
    Properties: 
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags: 
      - Key: "Name"
        Value: "CodeDeploy"
  PublicSubnet1: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: 
        Ref: "VPC"
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone: 
        Fn::Select: 
        - "0"
        -
          Fn::GetAZs: 
            Ref: "AWS::Region"
      MapPublicIpOnLaunch: "true"
      Tags: 
      - Key: "Name"
        Value: "CodeDeploy"
  PublicSubnet2: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: 
        Ref: "VPC"
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: 
        Fn::Select: 
        - "1"
        -
          Fn::GetAZs: 
            Ref: "AWS::Region"
      MapPublicIpOnLaunch: "true"
      Tags: 
      - Key: "Name"
        Value: "CodeDeploy"
  InternetGateway: 
    Type: "AWS::EC2::InternetGateway"
    Properties: 
      Tags: 
      - Key: "Name"
        Value: "CodeDeploy"
  AttachGateway: 
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      VpcId: 
        Ref: "VPC"
      InternetGatewayId: 
        Ref: "InternetGateway"
  RouteTable: 
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: 
        Ref: "VPC"
      Tags: 
      - Key: "Name"
        Value: "CodeDeploy"
  Route: 
    Type: "AWS::EC2::Route"
    DependsOn: "AttachGateway"
    Properties: 
      RouteTableId: 
        Ref: "RouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: 
        Ref: "InternetGateway"
  SubnetRouteTableAssociation1: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: 
        Ref: "PublicSubnet1"
      RouteTableId: 
        Ref: "RouteTable"
  SubnetRouteTableAssociation2: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: 
        Ref: "PublicSubnet2"
      RouteTableId: 
        Ref: "RouteTable"
  ALBSecurityGroup: 
    Type: "AWS::EC2::SecurityGroup"
    Properties: 
      VpcId: 
        Ref: "VPC"
      GroupDescription: "Enable http access"
      GroupName: "CodeDeploy-ALB"
      SecurityGroupIngress: 
      - IpProtocol: "tcp"
        FromPort: "80"
        ToPort: "80"
        CidrIp: "0.0.0.0/0"
      Tags: 
      - Key: "Name"
        Value: "CodeDeploy"
  EC2SecurityGroup: 
    Type: "AWS::EC2::SecurityGroup"
    Properties: 
      VpcId: 
        Ref: "VPC"
      GroupDescription: "Enable http access from ALB Security Group"
      GroupName: "CodeDeploy-EC2"
      SecurityGroupIngress: 
      - IpProtocol: "tcp"
        FromPort: "22"
        ToPort: "22"
        CidrIp: "0.0.0.0/0"
      - IpProtocol: "tcp"
        FromPort: "80"
        ToPort: "80"
        SourceSecurityGroupId: 
          Ref: "ALBSecurityGroup"
      Tags: 
      - Key: "Name"
        Value: "CodeDeploy"
  ALBTargetGroup: 
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties: 
      HealthCheckEnabled: "true"
      HealthCheckIntervalSeconds: "30"
      Matcher: 
        HttpCode: "200"
      Name: "CodeDeploy"
      Port: "80"
      Protocol: "HTTP"
      TargetGroupAttributes: 
      - Key: "deregistration_delay.timeout_seconds"
        Value: "120"
      VpcId: 
        Ref: "VPC"
      Tags: 
      - Key: "Name"
        Value: "CodeDeploy"
  ALB: 
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties: 
      IpAddressType: "ipv4"
      Name: "CodeDeploy"
      Scheme: "internet-facing"
      SecurityGroups: 
      - Ref: "ALBSecurityGroup"
      Subnets: 
      - Ref: "PublicSubnet1"
      - Ref: "PublicSubnet2"
      Tags: 
      - Key: "Name"
        Value: "CodeDeploy"
      Type: "application"
  ALBListener: 
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties: 
      DefaultActions: 
      -
        TargetGroupArn: 
          Ref: "ALBTargetGroup"
        Type: "forward"
      LoadBalancerArn: 
        Ref: "ALB"
      Port: "80"
      Protocol: "HTTP"